[{"/Users/user/Desktop/My-portfolio/src/index.js":"1","/Users/user/Desktop/My-portfolio/src/App.js":"2","/Users/user/Desktop/My-portfolio/src/components/NavBar.js":"3","/Users/user/Desktop/My-portfolio/src/components/Banner.js":"4","/Users/user/Desktop/My-portfolio/src/components/Skills.js":"5","/Users/user/Desktop/My-portfolio/src/components/ProjectCard.js":"6","/Users/user/Desktop/My-portfolio/src/components/Projects.js":"7","/Users/user/Desktop/My-portfolio/src/components/Contact.js":"8"},{"size":255,"mtime":1665413763101,"results":"9","hashOfConfig":"10"},{"size":484,"mtime":1665417278143,"results":"11","hashOfConfig":"10"},{"size":2817,"mtime":1665414020529,"results":"12","hashOfConfig":"10"},{"size":3439,"mtime":1665415282979,"results":"13","hashOfConfig":"10"},{"size":2266,"mtime":1665416351792,"results":"14","hashOfConfig":"10"},{"size":361,"mtime":1665416878091,"results":"15","hashOfConfig":"10"},{"size":4459,"mtime":1665416816447,"results":"16","hashOfConfig":"10"},{"size":5123,"mtime":1665417329631,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3obze7",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/user/Desktop/My-portfolio/src/index.js",[],[],"/Users/user/Desktop/My-portfolio/src/App.js",[],[],"/Users/user/Desktop/My-portfolio/src/components/NavBar.js",["43","44","45"],[],"/Users/user/Desktop/My-portfolio/src/components/Banner.js",["46","47"],[],"/Users/user/Desktop/My-portfolio/src/components/Skills.js",["48","49","50","51","52","53","54"],[],"/Users/user/Desktop/My-portfolio/src/components/ProjectCard.js",["55"],[],"/Users/user/Desktop/My-portfolio/src/components/Projects.js",["56"],[],"/Users/user/Desktop/My-portfolio/src/components/Contact.js",["57"],[],"import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport contactImg from \"../assets/img/contact-img.svg\";\nimport \"animate.css\";\nimport TrackVisibility from \"react-on-screen\";\n\nexport const Contact = () => {\n  const formInitialDetails = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    message: \"\",\n  };\n  const [formDetails, setFormDetails] = useState(formInitialDetails);\n  const [buttonText, setButtonText] = useState(\"Send\");\n  const [status, setStatus] = useState({});\n\n  const onFormUpdate = (category, value) => {\n    setFormDetails({\n      ...formDetails,\n      [category]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setButtonText(\"Sending...\");\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(formDetails),\n    });\n    setButtonText(\"Send\");\n    let result = await response.json();\n    setFormDetails(formInitialDetails);\n    if (result.code == 200) {\n      setStatus({ succes: true, message: \"Message sent successfully\" });\n    } else {\n      setStatus({\n        succes: false,\n        message: \"Something went wrong, please try again later.\",\n      });\n    }\n  };\n\n  return (\n    <section className=\"contact\" id=\"connect\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) => (\n                <img\n                  className={\n                    isVisible ? \"animate__animated animate__zoomIn\" : \"\"\n                  }\n                  src={contactImg}\n                  alt=\"Contact Us\"\n                />\n              )}\n            </TrackVisibility>\n          </Col>\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) => (\n                <div\n                  className={\n                    isVisible ? \"animate__animated animate__fadeIn\" : \"\"\n                  }\n                >\n                  <h2>Get In Touch</h2>\n                  <form onSubmit={handleSubmit}>\n                    <Row>\n                      <Col size={12} sm={6} className=\"px-1\">\n                        <input\n                          type=\"text\"\n                          value={formDetails.firstName}\n                          placeholder=\"First Name\"\n                          onChange={(e) =>\n                            onFormUpdate(\"firstName\", e.target.value)\n                          }\n                        />\n                      </Col>\n                      <Col size={12} sm={6} className=\"px-1\">\n                        <input\n                          type=\"text\"\n                          value={formDetails.lasttName}\n                          placeholder=\"Last Name\"\n                          onChange={(e) =>\n                            onFormUpdate(\"lastName\", e.target.value)\n                          }\n                        />\n                      </Col>\n                      <Col size={12} sm={6} className=\"px-1\">\n                        <input\n                          type=\"email\"\n                          value={formDetails.email}\n                          placeholder=\"Email Address\"\n                          onChange={(e) =>\n                            onFormUpdate(\"email\", e.target.value)\n                          }\n                        />\n                      </Col>\n                      <Col size={12} sm={6} className=\"px-1\">\n                        <input\n                          type=\"tel\"\n                          value={formDetails.phone}\n                          placeholder=\"Phone No.\"\n                          onChange={(e) =>\n                            onFormUpdate(\"phone\", e.target.value)\n                          }\n                        />\n                      </Col>\n                      <Col size={12} className=\"px-1\">\n                        <textarea\n                          rows=\"6\"\n                          value={formDetails.message}\n                          placeholder=\"Message\"\n                          onChange={(e) =>\n                            onFormUpdate(\"message\", e.target.value)\n                          }\n                        ></textarea>\n                        <button type=\"submit\">\n                          <span>{buttonText}</span>\n                        </button>\n                      </Col>\n                      {status.message && (\n                        <Col>\n                          <p\n                            className={\n                              status.success === false ? \"danger\" : \"success\"\n                            }\n                          >\n                            {status.message}\n                          </p>\n                        </Col>\n                      )}\n                    </Row>\n                  </form>\n                </div>\n              )}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\n",{"ruleId":"58","severity":1,"message":"59","line":71,"column":15,"nodeType":"60","endLine":71,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":74,"column":15,"nodeType":"60","endLine":74,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":77,"column":15,"nodeType":"60","endLine":77,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":13,"column":10,"nodeType":"63","messageId":"64","endLine":13,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":25,"column":6,"nodeType":"67","endLine":25,"endColumn":12,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"69","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":14},{"ruleId":"61","severity":1,"message":"70","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":49,"column":19,"nodeType":"60","endLine":49,"endColumn":51},{"ruleId":"71","severity":1,"message":"72","line":53,"column":19,"nodeType":"60","endLine":53,"endColumn":51},{"ruleId":"71","severity":1,"message":"72","line":57,"column":19,"nodeType":"60","endLine":57,"endColumn":51},{"ruleId":"71","severity":1,"message":"72","line":61,"column":19,"nodeType":"60","endLine":61,"endColumn":51},{"ruleId":"71","severity":1,"message":"72","line":69,"column":7,"nodeType":"60","endLine":69,"endColumn":77},{"ruleId":"73","severity":1,"message":"74","line":7,"column":9,"nodeType":"60","endLine":7,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":119,"column":7,"nodeType":"60","endLine":119,"endColumn":65},{"ruleId":"75","severity":1,"message":"76","line":39,"column":21,"nodeType":"77","messageId":"78","endLine":39,"endColumn":23},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'index' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["79"],"'arrow1' is defined but never used.","'arrow2' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"80","fix":"81"},"Update the dependencies array to be: [delta, text, tick]",{"range":"82","text":"83"},[783,789],"[delta, text, tick]"]